{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const useTheme=()=>{const context=useContext(ThemeContext);if(!context){throw new Error('useTheme must be used within a ThemeProvider');}return context;};export const ThemeProvider=_ref=>{let{children}=_ref;const[currentTheme,setCurrentTheme]=useState('UI Theme');const themes=['UI Theme','Ella Current Light','Ella Current Dark'];const applyTheme=themeName=>{// Remove existing theme classes\ndocument.body.classList.remove('theme-ui','theme-light','theme-dark');// Add the appropriate theme class\nswitch(themeName){case'UI Theme':document.body.classList.add('theme-ui');break;case'Ella Current Light':document.body.classList.add('theme-light');break;case'Ella Current Dark':document.body.classList.add('theme-dark');break;default:document.body.classList.add('theme-ui');}};const setTheme=themeName=>{setCurrentTheme(themeName);applyTheme(themeName);// Persist theme to localStorage\nlocalStorage.setItem('ella-ui-theme',themeName);};// Load saved theme on mount\nuseEffect(()=>{const savedTheme=localStorage.getItem('ella-ui-theme');if(savedTheme&&themes.includes(savedTheme)){setCurrentTheme(savedTheme);applyTheme(savedTheme);}else{// Default to UI Theme\napplyTheme('UI Theme');}},[]);const value={currentTheme,themes,setTheme,isLight:currentTheme==='UI Theme'||currentTheme==='Ella Current Light',isDark:currentTheme==='Ella Current Dark'};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","useTheme","context","Error","ThemeProvider","_ref","children","currentTheme","setCurrentTheme","themes","applyTheme","themeName","document","body","classList","remove","add","setTheme","localStorage","setItem","savedTheme","getItem","includes","value","isLight","isDark","Provider"],"sources":["/Volumes/HD2/Ella UI/src/context/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const [currentTheme, setCurrentTheme] = useState('UI Theme');\n\n  const themes = [\n    'UI Theme',\n    'Ella Current Light',\n    'Ella Current Dark'\n  ];\n\n  const applyTheme = (themeName) => {\n    // Remove existing theme classes\n    document.body.classList.remove('theme-ui', 'theme-light', 'theme-dark');\n    \n    // Add the appropriate theme class\n    switch (themeName) {\n      case 'UI Theme':\n        document.body.classList.add('theme-ui');\n        break;\n      case 'Ella Current Light':\n        document.body.classList.add('theme-light');\n        break;\n      case 'Ella Current Dark':\n        document.body.classList.add('theme-dark');\n        break;\n      default:\n        document.body.classList.add('theme-ui');\n    }\n  };\n\n  const setTheme = (themeName) => {\n    setCurrentTheme(themeName);\n    applyTheme(themeName);\n    // Persist theme to localStorage\n    localStorage.setItem('ella-ui-theme', themeName);\n  };\n\n  // Load saved theme on mount\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('ella-ui-theme');\n    if (savedTheme && themes.includes(savedTheme)) {\n      setCurrentTheme(savedTheme);\n      applyTheme(savedTheme);\n    } else {\n      // Default to UI Theme\n      applyTheme('UI Theme');\n    }\n  }, []);\n\n  const value = {\n    currentTheme,\n    themes,\n    setTheme,\n    isLight: currentTheme === 'UI Theme' || currentTheme === 'Ella Current Light',\n    isDark: currentTheme === 'Ella Current Dark'\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAO,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACK,YAAY,CAAC,CACxC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,YAAY,CAAEC,eAAe,CAAC,CAAGZ,QAAQ,CAAC,UAAU,CAAC,CAE5D,KAAM,CAAAa,MAAM,CAAG,CACb,UAAU,CACV,oBAAoB,CACpB,mBAAmB,CACpB,CAED,KAAM,CAAAC,UAAU,CAAIC,SAAS,EAAK,CAChC;AACAC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,UAAU,CAAE,aAAa,CAAE,YAAY,CAAC,CAEvE;AACA,OAAQJ,SAAS,EACf,IAAK,UAAU,CACbC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,GAAG,CAAC,UAAU,CAAC,CACvC,MACF,IAAK,oBAAoB,CACvBJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,GAAG,CAAC,aAAa,CAAC,CAC1C,MACF,IAAK,mBAAmB,CACtBJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,GAAG,CAAC,YAAY,CAAC,CACzC,MACF,QACEJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,GAAG,CAAC,UAAU,CAAC,CAC3C,CACF,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAIN,SAAS,EAAK,CAC9BH,eAAe,CAACG,SAAS,CAAC,CAC1BD,UAAU,CAACC,SAAS,CAAC,CACrB;AACAO,YAAY,CAACC,OAAO,CAAC,eAAe,CAAER,SAAS,CAAC,CAClD,CAAC,CAED;AACAd,SAAS,CAAC,IAAM,CACd,KAAM,CAAAuB,UAAU,CAAGF,YAAY,CAACG,OAAO,CAAC,eAAe,CAAC,CACxD,GAAID,UAAU,EAAIX,MAAM,CAACa,QAAQ,CAACF,UAAU,CAAC,CAAE,CAC7CZ,eAAe,CAACY,UAAU,CAAC,CAC3BV,UAAU,CAACU,UAAU,CAAC,CACxB,CAAC,IAAM,CACL;AACAV,UAAU,CAAC,UAAU,CAAC,CACxB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAa,KAAK,CAAG,CACZhB,YAAY,CACZE,MAAM,CACNQ,QAAQ,CACRO,OAAO,CAAEjB,YAAY,GAAK,UAAU,EAAIA,YAAY,GAAK,oBAAoB,CAC7EkB,MAAM,CAAElB,YAAY,GAAK,mBAC3B,CAAC,CAED,mBACER,IAAA,CAACC,YAAY,CAAC0B,QAAQ,EAACH,KAAK,CAAEA,KAAM,CAAAjB,QAAA,CACjCA,QAAQ,CACY,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}